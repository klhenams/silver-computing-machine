{
  "name": "Support System API",
  "dockerComposeFile": [
    "../docker-compose.yml",
    "docker-compose.dev.yml"
  ],
  "service": "support-api",
  "workspaceFolder": "/app",
  "shutdownAction": "stopCompose",
  // Features to add to the dev container
  "features": {
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11",
      "installTools": true
    },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {
      "version": "latest"
    }
  },
  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      "settings": {
        "python.pythonPath": "/usr/local/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": false,
        "python.linting.flake8Enabled": true,
        "python.formatting.provider": "black",
        "python.formatting.blackPath": "/usr/local/bin/black",
        "python.sortImports.path": "/usr/local/bin/isort",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        },
        "files.exclude": {
          "**/__pycache__": true,
          "**/*.pyc": true
        }
      },
      "extensions": [
        "ms-python.python",
        "ms-python.flake8",
        "ms-python.black-formatter",
        "ms-python.isort",
        "ms-python.pylint",
        "charliermarsh.ruff",
        "ms-vscode.vscode-json",
        "redhat.vscode-yaml",
        "ms-azuretools.vscode-docker",
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode",
        "GitHub.copilot",
        "GitHub.copilot-chat"
      ]
    }
  },
  // Use 'forwardPorts' to make a list of ports inside the container available locally
  "forwardPorts": [
    8000,
    5432
  ],
  "portsAttributes": {
    "8000": {
      "label": "FastAPI Application",
      "onAutoForward": "notify"
    },
    "5432": {
      "label": "PostgreSQL Database",
      "onAutoForward": "silent"
    }
  },
  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "pip install -e .[dev] && pre-commit install",
  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root
  "remoteUser": "vscode",
  // Set environment variables
  "containerEnv": {
    "PYTHONPATH": "/app/src"
  },
  // Mount the parent directory to preserve git history and allow access to all project files
  "mounts": [
    "source=${localWorkspaceFolder},target=/app,type=bind,consistency=cached"
  ]
}